stages: 
  - build
  - test
  - sonar
  - deploy

Build:
  stage: build
  image: node:13.7.0 # can be upgraded, depending on your node version used
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - dist/
  cache:
    key: $CI_COMMIT_REF_NAME
    paths:
      - node_modules/
  only:
    changes:
      - .gitlab-ci.yml
      - /**/*
    refs:
      - branches
  except:
    - staging
    - master

BuildStaging:
  stage: build
  image: node:13.7.0 # can be upgraded, depending on your node version used
  script:
    - npm install
    - npm run build -- --mode staging
  artifacts:
    paths:
      - dist/
  cache:
    key: staging
    paths:
      - node_modules/
  only:
    - staging

BuildMaster:
  stage: build
  image: node:13.7.0 # can be upgraded, depending on your node version used
  script:
    - npm install
    - npm run build -- --mode production
  artifacts:
    paths:
      - dist/
    expire_in: 1 hour
  cache:
    key: master
    paths:
      - node_modules/
  only:
    - master

Test:
  stage: test
  image: node:13.7.0 # can be upgraded, depending on your node version used
  script:
    - npm ci --progress=false
    - npm run test:unit -- --coverage
  artifacts:
    paths:
      - ./tests/__coverage__/lcov.info
    expire_in: 1 hour
  cache:
    key: $CI_COMMIT_REF_NAME
    policy: pull
    paths:
      - node_modules/

Eslint:
  stage: test
  image: node:13.7.0 # can be upgraded, depending on your node version used
  script:
    - npm run lint
  cache:
    key: $CI_COMMIT_REF_NAME
    policy: pull
    paths:
      - node_modules/
  
SonarScanner:
  image: addianto/sonar-scanner-cli:latest
  stage: sonar
  script:
    - sonar-scanner
      -Dsonar.host.url=https://pmpl.cs.ui.ac.id/sonarqube
      -Dsonar.login=$SONARQUBE_TOKEN
      -Dsonar.branch.name=$CI_COMMIT_REF_NAME

Deployment:
  stage: deploy
  image: ruby:latest
  before_script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
  script:
    - dpl --provider=heroku --app=$HEROKU_APPNAME --api-key=$HEROKU_APIKEY
    - export HEROKU_API_KEY=$HEROKU_APIKEY
    # - heroku run --app $HEROKU_APPNAME migrate
  environment:
    name: staging
    url: $HEROKU_APP_HOST
  cache:
    key: staging
    policy: pull
    paths:
      - node_modules/
  only:
    - staging

DeployProduction:
  stage: deploy
  image: ruby:latest
  before_script:
    - apt-get update -qy
    - apt-get install -y ruby-dev
    - gem install dpl
  script:
    - dpl --provider=heroku --app=$HEROKU_APPNAME_PROD --api-key=$HEROKU_APIKEY
    - export HEROKU_API_KEY=$HEROKU_APIKEY
    # - heroku run --app $HEROKU_APPNAME migrate
  environment:
    name: production
    url: $HEROKU_APP_HOST_PROD
  cache:
    key: production
    policy: pull
    paths:
      - node_modules/
  only:
    - master
  when: manual